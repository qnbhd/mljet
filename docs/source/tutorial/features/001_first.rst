
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "tutorial/features/001_first.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_tutorial_features_001_first.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_tutorial_features_001_first.py:


.. _first:

1. Lightweight and versatile
=============================================================

MLJET is written entirely in Python with few dependencies.
This means that once you get interested in MLJET, we can quickly move to a practical example.


Simple Sklearn Local Example
----------------------------

MLJET provides a simple interface to create project and deploy a model.

- :func:`mljet.contrib.entrypoint.cook` is a function that takes a model and a strategy and deploys it.

In this example, we simply create a project with scikit-learn.

.. GENERATED FROM PYTHON SOURCE LINES 23-24

Firstly, import :mod:`mljet`.

.. GENERATED FROM PYTHON SOURCE LINES 24-27

.. code-block:: default


    import mljet


.. GENERATED FROM PYTHON SOURCE LINES 28-30

Import :class:`sklearn.ensemble.RandomForestClassifier` as classifier
and :mod:`sklearn.datasets` to load the iris dataset.

.. GENERATED FROM PYTHON SOURCE LINES 30-34

.. code-block:: default


    from sklearn.datasets import load_iris
    from sklearn.ensemble import RandomForestClassifier


.. GENERATED FROM PYTHON SOURCE LINES 35-36

Let's load dataset and create and train a simple model.

.. GENERATED FROM PYTHON SOURCE LINES 36-43

.. code-block:: default



    X, y = load_iris(return_X_y=True)
    clf = RandomForestClassifier()
    clf.fit(X, y)



.. GENERATED FROM PYTHON SOURCE LINES 44-68

Now, we can deploy the model with :func:`mljet.contrib.entrypoint.cook`.
Main arguments are ``model`` and ``strategy``.

The strategy can be either `local` or `docker`.
The `local` strategy will deploy the model locally.
The `docker` strategy will deploy the model in a docker container.
The :func:`mljet.contrib.entrypoint.cook` function will return a bool or container name.

Now we make only a project without running it.
After calling the :func:`mljet.contrib.entrypoint.cook` function
You can see `build` folder in the current directory.

It contains:

- `Dockerfile` - Dockerfile for the model

- `requirements.txt` - requirements for the model

- `models` directory - directory with the dumped model

- `data` directory - directory with the example for the model

- `server.py` - main file for the model


.. GENERATED FROM PYTHON SOURCE LINES 68-71

.. code-block:: default


    mljet.contrib.cook(strategy="local", model=clf)


.. GENERATED FROM PYTHON SOURCE LINES 72-96

Let's see on :func:`mljet.contrib.entrypoint.cook` signature.
This function accepts a lot of parameters, but we see only the most important ones.

- `model` - model to deploy
- `strategy` - strategy to use
- `backend` - backend to use
- `need_run` - run service after build or not
- `scan_path` - path to scan for requirements
- `silent` - silent mode
- `verbose` - verbose mode

Model parameter is the most important one.
It can be any model that implements the `predict` and other methods.

.. note::
    The model must be picklable.

.. note::
    Now is supported `sklearn`, `xgboost`.

Strategy parameter determines the strategy to use.

Backend parameter determines the backend to use.
Now is implemented :mod:`sanic` and :mod:`flask` backends.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)


.. _sphx_glr_download_tutorial_features_001_first.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 001_first.py <001_first.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 001_first.ipynb <001_first.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
